1. http cookie -> cookie.js
기본 정보와 사용 문법, 함수를 찾아 볼 수 있다.

기본적으로 페이지 소스 -> 네트워크에서 response headers에는 쿠키에 대한 언급이 없다

   response.writeHead(200, {
        'Set-Cookie' : ['yummy_cookie=choco', 'tasty_cookie=strawberry']
    });

    response.end('Cookie!!');

하게 되면 네트워크에 두개의 쿠키가 존재하게 되고
쿠키를 주석처리하고도 지우고 싶다면 어플리케이션에서 쿠키의 존재를 직접 삭제하면된다.

2. 쿠키의 읽기 how to. it cookie in nodejs
console.log(request.headers.cookie);

npm cookie -> 쿠키를 뒤져서 핸들링할 수 있음
npm install -s cookie

parse라는 매소를 가지고 이용할 수 있음.
var cookies = cookie.parse(request.parse.cookie);

parse는 undefine을 허용할 수 없기때문에

undefine 부분을 if 처리해준다.


3. 휘발성 쿠키(session cookie) vs 비휘발성 쿠키 (permanent cookie)

max-age -> 얼마 동안 살아있나
expires -> 언제 만료
 `Permanent=cookies; Max-Age=${60*60*24*30}`

4. secure & httponly
Http 통해서만 가능
쿠키를 훔쳐가는 행위를 막는 방법
https에서만 전송됨

'Secure=Secure; Secure', -> http에서만 보임
'HttpOnly=HttpOnly; HttpOnly' -> 자바 스크립트를 이용해서 가져가지 못함


5. cookie의 유효범위 - path & domain
'Path=Path; Path=/cookie', -> 어느 path에서 동작하는 cookie
'Doamin=Domain; Domain=test.o2.org' -> 어떤 도메인에서 동작하는 cookie










